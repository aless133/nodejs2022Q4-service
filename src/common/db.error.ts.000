import { NestInterceptor, ExecutionContext, CallHandler, HttpException, HttpStatus } from '@nestjs/common';
import { Observable } from 'rxjs';
import { tap } from 'rxjs/operators';

export class CustomErrorInterceptor implements NestInterceptor {
  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {
    return next
      .handle()
      .pipe(
        tap(() => {}, error => {
          if (error instanceof YourCustomError) {
            throw new HttpException({
              status: HttpStatus.BAD_REQUEST,
              error: error.message,
            }, HttpStatus.BAD_REQUEST);
          }
        }),
      );
  }
}
