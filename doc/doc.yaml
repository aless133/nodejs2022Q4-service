openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /user:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateDto'
      responses:
        '201':
          description: ''
    get:
      operationId: UsersController_getAll
      parameters: []
      responses:
        '200':
          description: ''
  /user/{id}:
    put:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateDto'
      responses:
        '200':
          description: ''
    get:
      operationId: UsersController_get
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    delete:
      operationId: UsersController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /track:
    post:
      operationId: TracksController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackDto'
      responses:
        '201':
          description: ''
    get:
      operationId: TracksController_getAll
      parameters: []
      responses:
        '200':
          description: ''
  /track/{id}:
    put:
      operationId: TracksController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackDto'
      responses:
        '200':
          description: ''
    get:
      operationId: TracksController_get
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    delete:
      operationId: TracksController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /artist:
    post:
      operationId: ArtistsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistDto'
      responses:
        '201':
          description: ''
    get:
      operationId: ArtistsController_getAll
      parameters: []
      responses:
        '200':
          description: ''
  /artist/{id}:
    put:
      operationId: ArtistsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistDto'
      responses:
        '200':
          description: ''
    get:
      operationId: ArtistsController_get
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    delete:
      operationId: ArtistsController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /album:
    post:
      operationId: AlbumsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumDto'
      responses:
        '201':
          description: ''
    get:
      operationId: AlbumsController_getAll
      parameters: []
      responses:
        '200':
          description: ''
  /album/{id}:
    put:
      operationId: AlbumsController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumDto'
      responses:
        '200':
          description: ''
    get:
      operationId: AlbumsController_get
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    delete:
      operationId: AlbumsController_delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /favs:
    get:
      operationId: FavsController_getAll
      parameters: []
      responses:
        '200':
          description: ''
  /favs/track/{id}:
    post:
      operationId: FavsController_addTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
    delete:
      operationId: FavsController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /favs/album/{id}:
    post:
      operationId: FavsController_addAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
    delete:
      operationId: FavsController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
  /favs/artist/{id}:
    post:
      operationId: FavsController_addArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
    delete:
      operationId: FavsController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
info:
  title: Music home library
  description: Music home library API description
  version: '1.0'
  contact: {}
tags:
  - name: cats
    description: ''
servers: []
components:
  schemas:
    UserCreateDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password
    UserUpdateDto:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
      required:
        - oldPassword
        - newPassword
    TrackDto:
      type: object
      properties: {}
    ArtistDto:
      type: object
      properties: {}
    AlbumDto:
      type: object
      properties: {}
